rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /games/{gameId} {
      function isOwner(requestAuth, resourceData) {
        return requestAuth != null && requestAuth.uid == resourceData.ownerId;
      }

      function isOwnerOrGlobalSearch(requestData, resourceData, requestAuth) {
        let isOwner = requestAuth != null && requestAuth.uid == resourceData.ownerId;
        // let isGlobalSearch = requestData.state == "waitingForPlayers" && requestData.shortCode != null;
        let isGlobalSearch = false;
        return isGlobalSearch || isOwner;
      }

      allow list: if isOwnerOrGlobalSearch(request.resource.data, resource.data, request.auth);
      allow write: if isOwner(request.auth, resource.data);
      allow get: if true;

      match /players/{playerId} {
        allow read: if true;
        allow write: if get(/databases/$(database)/documents/games/$(gameId)).data.state == "waitingForPlayers";
      }

      match /questions/{questionId} {
        allow read: if true;
        // could check the game's ownerId in the future
        allow write: if request.auth != null;
      }

      match /answers/{answerId} {
        allow read: if true;
        allow write: if get(/databases/$(database)/documents/games/$(gameId)).data.state == "showingQuestion";
      }
    }
  }
}